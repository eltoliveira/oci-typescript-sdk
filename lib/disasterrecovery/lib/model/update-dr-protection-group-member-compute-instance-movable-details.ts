/**
 * Full Stack Disaster Recovery API
 * Use the Full Stack Disaster Recovery (FSDR) API to manage disaster recovery for business applications.
FSDR is an OCI disaster recovery orchestration and management service that provides comprehensive disaster recovery
capabilities for all layers of an application stack, including infrastructure, middleware, database, and application.

 * OpenAPI spec version: 20220125
 * 
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2023, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * Update properties for a Movable Compute Instance member.
 */
export interface UpdateDrProtectionGroupMemberComputeInstanceMovableDetails
  extends model.UpdateDrProtectionGroupMemberDetails {
  /**
    * A flag indicating if this compute instance should be moved to the same fault domain. 
* Compute instance launch will fail if this flag is set to true and capacity is not available in that specific fault domain in the destination region.
* <p>
Example: `false`
* 
    */
  "isRetainFaultDomain"?: boolean;
  /**
    * The OCID of the capacity reservation in the destination region using which this compute instance
* should be launched.
* <p>
Example: `ocid1.capacityreservation.oc1..&lt;unique_id&gt;`
* 
    */
  "destinationCapacityReservationId"?: string;
  /**
   * A list of Compute Instance VNIC mappings.
   *
   */
  "vnicMappings"?: Array<model.ComputeInstanceMovableVnicMappingDetails>;
  /**
    * The OCID of the compartment for this compute instance in the destination region.
* <p>
Example: `ocid1.compartment.oc1..&lt;unique_id&gt;`
* 
    */
  "destinationCompartmentId"?: string;
  /**
    * The OCID of the dedicated VM Host in the destination region where this compute instance
* should be launched
* <p>
Example: `ocid1.dedicatedvmhost.oc1..&lt;unique_id&gt;`
* 
    */
  "destinationDedicatedVmHostId"?: string;

  "memberType": string;
}

export namespace UpdateDrProtectionGroupMemberComputeInstanceMovableDetails {
  export function getJsonObj(
    obj: UpdateDrProtectionGroupMemberComputeInstanceMovableDetails,
    isParentJsonObj?: boolean
  ): object {
    const jsonObj = {
      ...(isParentJsonObj
        ? obj
        : (model.UpdateDrProtectionGroupMemberDetails.getJsonObj(
            obj
          ) as UpdateDrProtectionGroupMemberComputeInstanceMovableDetails)),
      ...{
        "vnicMappings": obj.vnicMappings
          ? obj.vnicMappings.map(item => {
              return model.ComputeInstanceMovableVnicMappingDetails.getJsonObj(item);
            })
          : undefined
      }
    };

    return jsonObj;
  }
  export const memberType = "COMPUTE_INSTANCE_MOVABLE";
  export function getDeserializedJsonObj(
    obj: UpdateDrProtectionGroupMemberComputeInstanceMovableDetails,
    isParentJsonObj?: boolean
  ): object {
    const jsonObj = {
      ...(isParentJsonObj
        ? obj
        : (model.UpdateDrProtectionGroupMemberDetails.getDeserializedJsonObj(
            obj
          ) as UpdateDrProtectionGroupMemberComputeInstanceMovableDetails)),
      ...{
        "vnicMappings": obj.vnicMappings
          ? obj.vnicMappings.map(item => {
              return model.ComputeInstanceMovableVnicMappingDetails.getDeserializedJsonObj(item);
            })
          : undefined
      }
    };

    return jsonObj;
  }
}
